name: ci

on:
  push:
    branches:
      - "main"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: cloud
          endpoint: "corchat/openthread"
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          tags: "${{ vars.DOCKER_USER }}/docker-build-cloud-demo:latest"
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry' }}
  

# name: Build

# on:
#   push:
#     branches-ignore:
#       - 'dependabot/**'
#   pull_request:
#     branches:
#       - 'main'

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || (github.repository == 'openthread/ot-br-posix' && github.run_id) || github.ref }}
#   cancel-in-progress: true

# jobs:

#   pretty:
#     runs-on: ubuntu-24.04
#     steps:
#     - uses: actions/checkout@v5
#     - name: Bootstrap
#       run: BUILD_TARGET=pretty-check tests/scripts/bootstrap.sh
#     - name: Check
#       run: script/make-pretty check

#   check:
#     runs-on: ubuntu-22.04
#     strategy:
#       fail-fast: false
#       matrix:
#         build_type: ["Debug", "Release"]
#         mdns: ["openthread", "mDNSResponder", "avahi"]
#     env:
#       BUILD_TARGET: check
#       OTBR_BUILD_TYPE: ${{ matrix.build_type }}
#       OTBR_MDNS: ${{ matrix.mdns }}
#       OTBR_OPTIONS: "-DOTBR_DHCP6_PD=ON -DOTBR_SRP_SERVER_ON_INIT=ON"
#       OTBR_COVERAGE: 1
#     steps:
#     - uses: actions/checkout@v5
#       with:
#         submodules: true
#     - name: Bootstrap
#       run: tests/scripts/bootstrap.sh
#     - name: Run
#       run: script/test build check
#     - name: Codecov
#       uses: codecov/codecov-action@v5

#   rest-check:
#     runs-on: ubuntu-22.04
#     strategy:
#       fail-fast: false
#       matrix:
#         rest: ["rest-off", ""]
#     env:
#       BUILD_TARGET: check
#       OTBR_REST: ${{ matrix.rest }}
#       OTBR_MDNS: mDNSResponder
#       OTBR_OPTIONS: "-DOTBR_SRP_SERVER_ON_INIT=ON"
#       OTBR_COVERAGE: 1
#     steps:
#     - uses: actions/checkout@v5
#       with:
#         submodules: true
#     - name: Bootstrap
#       run: tests/scripts/bootstrap.sh
#     - name: Run
#       run: script/test build check
#     - name: Codecov
#       uses: codecov/codecov-action@v5

#   script-check:
#     runs-on: ubuntu-22.04
#     env:
#       BUILD_TARGET: script-check
#       OTBR_COVERAGE: 1
#     steps:
#     - uses: actions/checkout@v5
#       with:
#         submodules: true
#     - name: Bootstrap
#       run: tests/scripts/bootstrap.sh
#     - name: Run
#       run: tests/scripts/check-scripts
#     - name: Codecov
#       uses: codecov/codecov-action@v5

#   scan-build:
#     runs-on: ubuntu-22.04
#     env:
#       BUILD_TARGET: scan-build
#       CC: clang
#       CXX: clang++
#     steps:
#     - uses: actions/checkout@v5
#       with:
#         submodules: true
#     - name: Bootstrap
#       run: tests/scripts/bootstrap.sh
#     - name: Run
#       run: tests/scripts/check-scan-build

#   package:
#     runs-on: ubuntu-22.04
#     env:
#       BUILD_TARGET: package
#     steps:
#     - uses: actions/checkout@v5
#       with:
#         submodules: true
#     - name: Bootstrap
#       run: |
#         tests/scripts/bootstrap.sh
#         sudo pip3 install -U scikit-build
#     - name: Build
#       run: script/test package

#   simulation:
#     runs-on: ubuntu-latest
#     env:
#       BUILD_TARGET: check
#     steps:
#     - uses: actions/checkout@v5
#       with:
#         submodules: true
#     - name: Bootstrap
#       run: tests/scripts/bootstrap.sh
#     - name: Build
#       run: |
#         script/bootstrap
#         script/test build
#     - name: Run
#       run: |
#         script/test simulation
